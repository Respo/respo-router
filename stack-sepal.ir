{:definitions {"respo-router.main/-main" ["defn" "-main" [] ["enable-console-print!"] ["render-app!"] ["listen!" "dict" "dispatch!" "router-mode"] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"]], "respo-router.main/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref" "dict" "router-mode"] "target" "dispatch!" "states-ref"]]], "respo-router.util.listener/parse-address" ["defn" "parse-address" ["address" "dict"] ["let" [["trimed-address" ["slashTrimLeft" "address"]] [["[]" "paths" "query"] ["extract-address" "trimed-address"]]] ["parse-path" "paths" "dict" "query"]]], "respo-router.comp.container/route-home" ["defn" "route-home" ["e" "dispatch!"] ["dispatch!" ":router/nav" "|/home"]], "respo-router.comp.container/route-room" ["defn" "route-room" ["e" "dispatch!"] ["dispatch!" ":router/route" ["{}" [":name" "|team"] [":data" ["{}" ["|team-id" "|t12345"]]] [":query" ["{}"]] [":router" ["{}" [":name" "|room"] [":data" ["{}" ["|room-id" "|r1234"]]] [":query" ["{}" ["|a" "1"] ["|b" "2"]]] [":router" "nil"]]]]]], "respo-router.util.listener/extract-address" ["defn" "extract-address" ["address"] ["let" [["text-path" ["if" ["string/includes?" "address" "|?"] ["first" ["string/split" "address" "|?"]] "address"]] ["query" ["if" ["string/includes?" "address" "|?"] ["let" [["segments" ["string/split" "address" "|?"]]] ["if" ["=" ["count" "segments"] "1"] ["{}"] ["parse-query" ["last" "segments"]]]] ["{}"]]] ["paths" ["filterv" ["fn" ["piece"] ["not" ["string/blank?" "piece"]]] ["string/split" "text-path" "|/"]]]] ["[]" "paths" "query"]]], "respo-router.util.listener/strip-sharp" ["defn" "strip-sharp" ["text"] ["if" ["string/starts-with?" "text" "|#"] ["subs" "text" "1"] "text"]], "respo-router.main/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["println" "|dispatch!" "op" "op-data"] ["let" [["new-store" ["case" "op" [":router/route" ["assoc" "@store-ref" ":router" "op-data"]] [":router/nav" ["assoc" "@store-ref" ":router" ["parse-address" "op-data" "dict"]]] "@store-ref"]]] ["reset!" "store-ref" "new-store"]]], "respo-router.main/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "respo-router.schema/store" ["def" "store" ["{}" [":router" ["assoc" "router" ":name" "|home"]]]], "respo-router.comp.container/route-team" ["defn" "route-team" ["e" "dispatch!"] ["dispatch!" ":router/route" ["{}" [":name" "|team"] [":data" ["{}" ["|team-id" "|t1234"]]] [":router" "nil"] [":query" ["{}"]]]]], "respo-router.comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "respo-router.util.format/stringify-query" ["defn" "stringify-query" ["query"] ["string/join" "|&" ["map" ["fn" ["pairs"] ["string/join" "|=" "pairs"]] "query"]]], "respo-router.util.format/router->string" ["defn" "router->string" ["router" "dict"] ["let" [["params" ["get" "dict" [":name" "router"]]] ["router-data" [":data" "router"]] ["segments" ["map" ["fn" ["key-path"] ["get" "router-data" "key-path"]] "params"]] ["sub-router" [":router" "router"]] ["segment-path" ["string/join" "|/" ["cons" [":name" "router"] "segments"]]]] ["--" "println" "|router->string:" "segments" "router" "segment-path"] ["if" ["some?" "sub-router"] ["str" "|/" "segment-path" ["router->string" "sub-router" "dict"]] ["let" [["query-str" ["stringify-query" [":query" "router"]]] ["query-part" ["if" ["string/blank?" "query-str"] "|" ["str" "|?" "query-str"]]]] ["if" ["=" "segment-path" "|home"] ["str" "|/" "query-part"] ["str" "|/" "segment-path" "query-part"]]]]]], "respo-router.main/store-ref" ["defonce" "store-ref" ["atom" "schema/store"]], "respo-router.comp.container/route-search" ["defn" "route-search" ["e" "dispatch!"] ["dispatch!" ":router/nav" "|search"]], "respo-router.comp.router/comp-router" ["def" "comp-router" ["create-comp" ":router" "render"]], "respo-router.util.listener/ignored?-ref" ["def" "ignored?-ref" ["atom" "false"]], "respo-router.util.listener/parse-query" ["defn" "parse-query" ["text"] ["if" ["string/blank?" "text"] ["{}"] ["->>" ["string/split" "text" "|&"] ["map" ["fn" ["piece"] ["string/split" "piece" ["re-pattern" "|="]]]] ["into" ["{}"]]]]], "respo-router.comp.container/route-404" ["defn" "route-404" ["e" "dispatch!"] ["dispatch!" ":router/nav" "|/missing"]], "respo-router.util.listener/slashTrimLeft" ["defn" "slashTrimLeft" ["address"] ["if" ["string/blank?" "address"] "|" ["if" ["=" "|/" ["first" "address"]] ["subs" "address" "1"] "address"]]], "respo-router.main/on-jsload" ["defn" "on-jsload" [] ["clear-cache!"] ["render-app!"] ["println" "|code update."]], "respo-router.util.listener/listen!" ["defn" "listen!" ["dict" "dispatch!" "router-mode"] ["case" "router-mode" [":hash" [".addEventListener" "js/window" "|hashchange" ["fn" ["event"] ["let" [["path-info" ["parse-address" ["strip-sharp" [".-hash" "js/location"]] "dict"]]] ["--" "println" "|is ignored?" "@ignored?-ref"] ["if" ["not" "@ignored?-ref"] ["js/setTimeout" ["fn" [] ["dispatch!" ":router/route" "path-info"]] "0"]]]]]] [":history" [".addEventListener" "js/window" "|popstate" ["fn" ["event"] ["let" [["current-address" ["str" [".-pathname" "js/location"] [".-search" "js/location"]]] ["path-info" ["parse-address" "current-address" "dict"]]] ["dispatch!" ":router/route" "path-info"]]]]] "nil"]], "respo-router.util.listener/parse-path" ["defn" "parse-path" ["paths" "dict" "query"] ["--" "println" "|parse-path:" ["pr-str" "paths"] "dict" "query" ["empty?" "paths"] ["count" "paths"]] ["if" ["empty?" "paths"] ["merge" "schema/router" ["{}" [":name" "|home"] [":query" "query"]]] ["let" [["path-name" ["first" "paths"]]] ["if" ["contains?" "dict" "path-name"] ["let" [["params" ["get" "dict" "path-name"]] ["len" ["count" "params"]]] ["if" ["<" ["dec" ["count" "paths"]] "len"] ["merge" "schema/router" ["{}" [":segments" ["rest" "paths"]] [":query" "query"]]] ["merge" "schema/router" ["{}" [":name" "path-name"] [":data" ["zipmap" "params" ["rest" "paths"]]] [":router" ["let" [["sub-paths" ["subvec" "paths" ["inc" ["count" "params"]]]]] ["if" ["empty?" "sub-paths"] "nil" ["parse-path" "sub-paths" "dict" "query"]]]] [":query" "query"]]]]] ["merge" "schema/router" ["{}" [":segments" ["rest" "paths"]] [":query" "query"]]]]]]], "respo-router.main/dict" ["def" "dict" ["{}" ["|home" ["[]"]] ["|team" ["[]" "|team-id"]] ["|room" ["[]" "|room-id"]] ["|search" ["[]"]]]], "respo-router.comp.container/render" ["defn" "render" ["store" "dict" "router-mode"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global" "ui/row"]]] ["div" ["{}"] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "route-home"]]]] ["comp-text" "|home" "nil"]] ["div" ["{}"] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "route-team"]]]] ["comp-text" "|team" "nil"]] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "route-room"]]]] ["comp-text" "|room" "nil"]]] ["div" ["{}"] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "route-search"]]]] ["comp-text" "|search" "nil"]]] ["div" ["{}"] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "route-404"]]]] ["comp-text" "|404" "nil"]]]] ["render-value" [":router" "store"]] ["comp-router" [":router" "store"] "dict" "router-mode"]]]], "respo-router.schema/router" ["def" "router" ["{}" [":name" "404"] [":data" ["{}"]] [":router" "nil"] [":segments" ["[]"]] [":query" ["{}"]]]], "respo-router.comp.router/render" ["defn" "render" ["router" "dict" "router-mode"] ["fn" ["state" "mutate!"] ["if" ["exists?" "js/location"] ["case" "router-mode" [":hash" ["let" [["current-hash" [".-hash" "js/location"]] ["old-router" ["parse-address" ["strip-sharp" "current-hash"] "dict"]]] ["if" ["not=" "old-router" "router"] ["let" [["new-hash" ["str" "|#" ["router->string" "router" "dict"]]]] ["--" "println" "|force set path to:" "new-hash"] ["reset!" "ignored?-ref" "true"] ["set!" [".-hash" "js/location"] "new-hash"] ["js/setTimeout" ["fn" [] ["reset!" "ignored?-ref" "false"] ["--" "println" "|ignore end"]]]]]]] [":history" ["let" [["old-address" ["str" [".-pathname" "js/location"] [".-search" "js/location"]]] ["old-router" ["parse-address" "old-address" "dict"]] ["new-address" ["router->string" "router" "dict"]]] ["if" ["not=" "old-router" "router"] [".pushState" "js/history" "nil" "nil" "new-address"]]]] "nil"]] ["span" ["{}"]]]], "respo-router.main/router-mode" ["def" "router-mode" ":history"]}, :namespaces {"respo-router.comp.container" ["ns" "respo-router.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo-router.comp.router" ":refer" ["[]" "comp-router"]] ["[]" "respo-value.comp.value" ":refer" ["[]" "render-value"]] ["[]" "respo-ui.style" ":as" "ui"]]], "respo-router.main" ["ns" "respo-router.main" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "respo-router.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "respo-router.util.listener" ":refer" ["[]" "listen!" "parse-address"]] ["[]" "respo-router.schema" ":as" "schema"]]], "respo-router.comp.router" ["ns" "respo-router.comp.router" [":require" ["[]" "clojure.string" ":as" "string"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo-router.util.listener" ":refer" ["[]" "ignored?-ref" "parse-address" "strip-sharp"]] ["[]" "respo-router.util.format" ":refer" ["[]" "router->string"]]]], "respo-router.schema" ["ns" "respo-router.schema"], "respo-router.util.listener" ["ns" "respo-router.util.listener" [":require" ["[]" "clojure.string" ":as" "string"] ["[]" "respo-router.schema" ":as" "schema"]]], "respo-router.util.format" ["ns" "respo-router.util.format" [":require" ["[]" "clojure.string" ":as" "string"]]]}, :procedures {"respo-router.main" [["set!" [".-onload" "js/window"] "-main"]]}, :main-definition nil}